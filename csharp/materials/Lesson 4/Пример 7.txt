using System;

public class Address
{
    public string City { get; set; }
    public string Street { get; set; }

    public Address(string city, string street)
    {
        City = city;
        Street = street;
    }

    public override string ToString()
    {
        return $"{Street}, {City}";
    }
}

public class Person : ICloneable
{
    public string Name { get; set; }
    public int Age { get; set; }
    public Address Address { get; set; }

    public Person(string name, int age, Address address)
    {
        Name = name;
        Age = age;
        Address = address;
    }

    // Реализация метода Clone
    public object Clone()
    {
        // Глубокое копирование объекта Person (копируется и адрес)
        Person clonedPerson = (Person)this.MemberwiseClone(); // Поверхностное копирование
        clonedPerson.Address = new Address(this.Address.City, this.Address.Street); // Глубокая копия адреса
        return clonedPerson;
    }

    public override string ToString()
    {
        return $"{Name}, {Age} years old, Address: {Address}";
    }
}

class Program
{
    static void Main()
    {
        // Создаем объект Person
        Person person1 = new Person("Alice", 30, new Address("New York", "5th Avenue"));

        // Клонируем объект
        Person person2 = (Person)person1.Clone();

        // Изменим копию и убедимся, что оригинал не изменился
        person2.Name = "Bob";
        person2.Address.City = "Los Angeles";

        // Вывод оригинала и клона
        Console.WriteLine("Original person:");
        Console.WriteLine(person1);

        Console.WriteLine("\nCloned person:");
        Console.WriteLine(person2);
    }
}
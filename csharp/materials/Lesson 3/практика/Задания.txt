Задания на тему: Наследование
Создание системы классов для библиотеки:

1. Разработайте базовый класс Book, который будет содержать общие свойства для книги, такие как Title, Author, ISBN.
Создайте два производных класса EBook и PrintedBook, которые наследуют от Book. В классе EBook добавьте свойство FileSize, а в классе PrintedBook — свойство PageCount.
Создайте экземпляры классов EBook и PrintedBook и выведите информацию о каждой книге.
Создание системы классов для транспортных средств:

2. Создайте базовый класс Vehicle с общими свойствами Make, Model, Year и методом StartEngine.
Реализуйте два производных класса Car и Motorcycle. Добавьте уникальные свойства и методы для каждого из них, например, TrunkSize для Car и HasSidecar для Motorcycle.
Напишите код для создания объектов Car и Motorcycle, вызовите методы и выведите информацию о транспортных средствах.
Создание системы классов для управления персоналом:

3. Создайте базовый класс Employee с общими свойствами, такими как Name, Position, Salary, и методом Work().
Создайте производные классы Manager, Engineer и Intern. В каждом классе добавьте уникальные методы, например, ManageTeam() для Manager, WriteCode() для Engineer и Assist() для Intern.
Создайте массив объектов Employee, включающий различные типы сотрудников, и вызовите метод Work() для каждого объекта.


Задания на тему: Виртуальные методы и свойства
Создание системы классов для музыкальных инструментов:

1. Создайте базовый класс MusicalInstrument с виртуальным методом Play(), который выводит сообщение "Playing a musical instrument".
Реализуйте производные классы Guitar и Piano, в которых переопределите метод Play() для вывода уникальных сообщений для каждого инструмента.
Создайте массив объектов MusicalInstrument и вызовите метод Play() для каждого инструмента, чтобы продемонстрировать полиморфизм.
Создание системы классов для обработки заказов:

2. Разработайте базовый класс Order с виртуальным методом CalculateTotal(), который возвращает общую стоимость заказа.
Создайте производные классы OnlineOrder и InStoreOrder. Переопределите метод CalculateTotal() в каждом классе, добавив уникальные расчеты, например, скидки для онлайн-заказов и налоги для заказов в магазине.
Создайте объекты обоих типов заказов и выведите общую стоимость для каждого заказа.
Создание системы классов для домашних животных:

3. Создайте базовый класс Pet с виртуальным свойством Sound, которое возвращает звук, который издает животное.
Реализуйте производные классы Dog, Cat и Bird. В каждом классе переопределите свойство Sound, чтобы оно возвращало соответствующие звуки.
Напишите программу, которая создает массив объектов Pet и выводит звуки каждого животного.


Задания на тему: Абстрактные классы
Создание системы классов для геометрических фигур:

1. Разработайте абстрактный класс Shape с абстрактными методами CalculateArea() и CalculatePerimeter().
Создайте производные классы Triangle, Square и Circle, которые реализуют методы из абстрактного класса.
Напишите программу, которая создает экземпляры различных фигур, вычисляет их площадь и периметр, и выводит результаты на экран.
Создание системы классов для сотрудников компании:

2. Создайте абстрактный класс Employee с абстрактными методами CalculateSalary() и GetRole().
Реализуйте производные классы FullTimeEmployee, PartTimeEmployee и Contractor, которые должны по-своему реализовывать расчет зарплаты и возвращать соответствующую роль.
Напишите программу, которая создает список сотрудников, выводит их роли и рассчитывает зарплаты.
Создание системы классов для транспортных билетов:

3. Создайте абстрактный класс Ticket с абстрактным методом GetPrice().
Реализуйте производные классы BusTicket, TrainTicket и FlightTicket, которые определяют стоимость билета в зависимости от типа транспорта и других факторов.
Напишите программу, которая создает различные типы билетов и выводит их стоимость на экран.